<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on win32)" generated="20191213 15:15:57.801" rpa="false">
<suite id="s1" name="02AtualizarReq" source="F:\pj-requisitorio-robot\Contexto\02AtualizarReq">
<suite id="s1-s1" name="Test" source="F:\pj-requisitorio-robot\Contexto\02AtualizarReq\Test">
<suite id="s1-s1-s1" name="TestAtualizarReq" source="F:\pj-requisitorio-robot\Contexto\02AtualizarReq\Test\TestAtualizarReq.robot">
<kw name="Conectar no banco" library="Atualizaresource" type="setup">
<msg timestamp="20191213 15:16:02.941" level="TRACE">Arguments: [  ]</msg>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<arguments>
<arg>cx_Oracle</arg>
<arg>${CONEXAO_BANCO}</arg>
</arguments>
<msg timestamp="20191213 15:16:02.942" level="TRACE">Arguments: [ 'cx_Oracle' | "'saj/agesune1@PRJMSP'" ]</msg>
<msg timestamp="20191213 15:16:02.945" level="INFO">Executing : Connect To Database Using Custom Params : cx_Oracle.connect(db_api_2.connect('saj/agesune1@PRJMSP')) </msg>
<msg timestamp="20191213 15:16:03.129" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:02.942" endtime="20191213 15:16:03.130"></status>
</kw>
<msg timestamp="20191213 15:16:03.130" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:02.941" endtime="20191213 15:16:03.130"></status>
</kw>
<test id="s1-s1-s1-t1" name="Cenário 01:Atualizar processo">
<kw name="Dado que seja informado uma data com indexador disponíveis">
<msg timestamp="20191213 15:16:03.131" level="TRACE">Arguments: [  ]</msg>
<kw name="Verificar no banco se existe indexador nessa data" library="Atualizaresource">
<msg timestamp="20191213 15:16:03.131" level="TRACE">Arguments: [  ]</msg>
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<msg timestamp="20191213 15:16:03.131" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20191213 15:16:03.131" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:03.131" endtime="20191213 15:16:03.131"></status>
</kw>
<msg timestamp="20191213 15:16:03.131" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:03.131" endtime="20191213 15:16:03.132"></status>
</kw>
<msg timestamp="20191213 15:16:03.132" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:03.131" endtime="20191213 15:16:03.132"></status>
</kw>
<kw name="Quando atualizar o requisitorio">
<msg timestamp="20191213 15:16:03.133" level="TRACE">Arguments: [  ]</msg>
<kw name="Abrir o Sistema" library="Atualizaresource">
<msg timestamp="20191213 15:16:03.133" level="TRACE">Arguments: [  ]</msg>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>${spjCliente}</arg>
<arg>cwd=${pathTestador}</arg>
</arguments>
<assign>
<var>${Process cliente}</var>
</assign>
<msg timestamp="20191213 15:16:03.134" level="TRACE">Arguments: [ 'F:\\SAJ\\Topo\\spjClienteApp.exe' | cwd='F:\\SAJ\\Topo\\' ]</msg>
<msg timestamp="20191213 15:16:03.134" level="INFO">Starting process:
F:\SAJ\Topo\spjClienteApp.exe</msg>
<msg timestamp="20191213 15:16:03.134" level="DEBUG">Process configuration:
cwd:     F:\SAJ\Topo\
shell:   False
stdout:  PIPE
stderr:  PIPE
alias:   None
env:     None</msg>
<msg timestamp="20191213 15:16:03.151" level="TRACE">Return: 1</msg>
<msg timestamp="20191213 15:16:03.151" level="INFO">${Process cliente} = 1</msg>
<status status="PASS" starttime="20191213 15:16:03.133" endtime="20191213 15:16:03.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${Process cliente}</arg>
</arguments>
<msg timestamp="20191213 15:16:03.152" level="TRACE">Arguments: [ '${Process cliente}' ]</msg>
<msg timestamp="20191213 15:16:03.152" level="INFO">${Process cliente} = 1</msg>
<msg timestamp="20191213 15:16:03.152" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:03.151" endtime="20191213 15:16:03.152"></status>
</kw>
<kw name="Wait For Active Window" library="AutoItLibrary">
<doc>Wait up to _TimeOut_ seconds for the window with the given _WindowTitle_ and optional
_WindowText_ to appear. Force this to be the active window after it appears.  Optionally do a
full screen capture on failure.</doc>
<arguments>
<arg>fprjLogin</arg>
<arg>${EMPTY}</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20191213 15:16:03.153" level="TRACE">Arguments: [ 'fprjLogin' | '' | 5 ]</msg>
<msg timestamp="20191213 15:16:04.039" level="INFO">AutoItLibrary.WaitForActiveWindow(WindowTitle='fprjLogin', WindowText='', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:04.039" level="INFO">AutoItLibrary.WinWait(WindowTitle='fprjLogin', WindowText='', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:04.039" level="INFO">AutoItLibrary.WinWaitActive(WindowTitle='fprjLogin', WindowText='', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:04.039" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:03.152" endtime="20191213 15:16:04.039"></status>
</kw>
<kw name="Press Special Key" library="SikuliLibrary">
<doc>Press special key
 Presses a special keyboard key.</doc>
<arguments>
<arg>ENTER</arg>
</arguments>
<msg timestamp="20191213 15:16:04.039" level="TRACE">Arguments: [ 'ENTER' ]</msg>
<msg timestamp="20191213 15:16:04.291" level="INFO">Params: [ENTER]
[log]  TYPE "#ENTER."</msg>
<msg timestamp="20191213 15:16:04.291" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20191213 15:16:04.039" endtime="20191213 15:16:04.291"></status>
</kw>
<kw name="Wait For Active Window" library="AutoItLibrary">
<doc>Wait up to _TimeOut_ seconds for the window with the given _WindowTitle_ and optional
_WindowText_ to appear. Force this to be the active window after it appears.  Optionally do a
full screen capture on failure.</doc>
<arguments>
<arg>${telaSistema}</arg>
<arg>${EMPTY}</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20191213 15:16:04.292" level="TRACE">Arguments: [ 'SAJ/PJ - Procuradoria Jurídica' | '' | 5 ]</msg>
<msg timestamp="20191213 15:16:04.822" level="INFO">AutoItLibrary.WaitForActiveWindow(WindowTitle='SAJ/PJ - Procuradoria Jurídica', WindowText='', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:04.822" level="INFO">AutoItLibrary.WinWait(WindowTitle='SAJ/PJ - Procuradoria Jurídica', WindowText='', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:04.822" level="INFO">AutoItLibrary.WinWaitActive(WindowTitle='SAJ/PJ - Procuradoria Jurídica', WindowText='', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:04.822" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:04.292" endtime="20191213 15:16:04.822"></status>
</kw>
<msg timestamp="20191213 15:16:04.822" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:03.133" endtime="20191213 15:16:04.822"></status>
</kw>
<kw name="Abrir janela de Atualização" library="Atualizaresource">
<msg timestamp="20191213 15:16:04.822" level="TRACE">Arguments: [  ]</msg>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>{ALT}</arg>
</arguments>
<msg timestamp="20191213 15:16:04.823" level="TRACE">Arguments: [ '{ALT}' ]</msg>
<msg timestamp="20191213 15:16:04.834" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:04.823" endtime="20191213 15:16:04.834"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>r</arg>
</arguments>
<msg timestamp="20191213 15:16:04.834" level="TRACE">Arguments: [ 'r' ]</msg>
<msg timestamp="20191213 15:16:04.845" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:04.834" endtime="20191213 15:16:04.845"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>á</arg>
</arguments>
<msg timestamp="20191213 15:16:04.846" level="TRACE">Arguments: [ 'á' ]</msg>
<msg timestamp="20191213 15:16:04.856" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:04.845" endtime="20191213 15:16:04.856"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>R</arg>
</arguments>
<msg timestamp="20191213 15:16:04.857" level="TRACE">Arguments: [ 'R' ]</msg>
<msg timestamp="20191213 15:16:04.878" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:04.856" endtime="20191213 15:16:04.878"></status>
</kw>
<msg timestamp="20191213 15:16:04.878" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:04.822" endtime="20191213 15:16:04.878"></status>
</kw>
<kw name="Preecher campos de atualização selecionando processo" library="Atualizaresource">
<msg timestamp="20191213 15:16:04.878" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait For Active Window" library="AutoItLibrary">
<doc>Wait up to _TimeOut_ seconds for the window with the given _WindowTitle_ and optional
_WindowText_ to appear. Force this to be the active window after it appears.  Optionally do a
full screen capture on failure.</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>${telaCalculo}</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20191213 15:16:04.879" level="TRACE">Arguments: [ '' | 'Cálculo de Requisitórios' | 5 ]</msg>
<msg timestamp="20191213 15:16:06.798" level="INFO">AutoItLibrary.WaitForActiveWindow(WindowTitle='', WindowText='Cálculo de Requisitórios', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:06.798" level="INFO">AutoItLibrary.WinWait(WindowTitle='', WindowText='Cálculo de Requisitórios', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:06.798" level="INFO">AutoItLibrary.WinWaitActive(WindowTitle='', WindowText='Cálculo de Requisitórios', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:06.798" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:04.878" endtime="20191213 15:16:06.798"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>${DataAtualizacao}</arg>
</arguments>
<msg timestamp="20191213 15:16:06.798" level="TRACE">Arguments: [ '01012019' ]</msg>
<msg timestamp="20191213 15:16:06.882" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:06.798" endtime="20191213 15:16:06.882"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>{TAB}</arg>
</arguments>
<msg timestamp="20191213 15:16:06.883" level="TRACE">Arguments: [ '{TAB}' ]</msg>
<msg timestamp="20191213 15:16:06.894" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:06.883" endtime="20191213 15:16:06.894"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>${DataAtualizacao}</arg>
</arguments>
<msg timestamp="20191213 15:16:06.894" level="TRACE">Arguments: [ '01012019' ]</msg>
<msg timestamp="20191213 15:16:06.980" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:06.894" endtime="20191213 15:16:06.980"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>{TAB}</arg>
</arguments>
<msg timestamp="20191213 15:16:06.980" level="TRACE">Arguments: [ '{TAB}' ]</msg>
<msg timestamp="20191213 15:16:06.991" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:06.980" endtime="20191213 15:16:06.991"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>${nuprocessoP}</arg>
</arguments>
<msg timestamp="20191213 15:16:06.991" level="TRACE">Arguments: [ '2019056253' ]</msg>
<msg timestamp="20191213 15:16:07.096" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:06.991" endtime="20191213 15:16:07.096"></status>
</kw>
<kw name="Wait For Active Window" library="AutoItLibrary">
<doc>Wait up to _TimeOut_ seconds for the window with the given _WindowTitle_ and optional
_WindowText_ to appear. Force this to be the active window after it appears.  Optionally do a
full screen capture on failure.</doc>
<arguments>
<arg>Seleção de Processos Dependentes</arg>
<arg>${EMPTY}</arg>
<arg>5</arg>
</arguments>
<msg timestamp="20191213 15:16:07.096" level="TRACE">Arguments: [ 'Seleção de Processos Dependentes' | '' | 5 ]</msg>
<msg timestamp="20191213 15:16:07.621" level="INFO">AutoItLibrary.WaitForActiveWindow(WindowTitle='Seleção de Processos Dependentes', WindowText='', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:07.621" level="INFO">AutoItLibrary.WinWait(WindowTitle='Seleção de Processos Dependentes', WindowText='', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:07.621" level="INFO">AutoItLibrary.WinWaitActive(WindowTitle='Seleção de Processos Dependentes', WindowText='', TimeOut=5)</msg>
<msg timestamp="20191213 15:16:07.621" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:07.096" endtime="20191213 15:16:07.621"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>{DOWN}</arg>
</arguments>
<msg timestamp="20191213 15:16:07.621" level="TRACE">Arguments: [ '{DOWN}' ]</msg>
<msg timestamp="20191213 15:16:07.632" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:07.621" endtime="20191213 15:16:07.632"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20191213 15:16:07.632" level="TRACE">Arguments: [ '1' ]</msg>
<msg timestamp="20191213 15:16:08.633" level="INFO">Slept 1 second</msg>
<msg timestamp="20191213 15:16:08.633" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:07.632" endtime="20191213 15:16:08.633"></status>
</kw>
<kw name="Press Special Key" library="SikuliLibrary">
<doc>Press special key
 Presses a special keyboard key.</doc>
<arguments>
<arg>ENTER</arg>
</arguments>
<msg timestamp="20191213 15:16:08.633" level="TRACE">Arguments: [ 'ENTER' ]</msg>
<msg timestamp="20191213 15:16:08.686" level="INFO">Params: [ENTER]
[log]  TYPE "#ENTER."</msg>
<msg timestamp="20191213 15:16:08.686" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20191213 15:16:08.633" endtime="20191213 15:16:08.686"></status>
</kw>
<msg timestamp="20191213 15:16:08.686" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:04.878" endtime="20191213 15:16:08.686"></status>
</kw>
<kw name="Clicar em Calcular" library="Atualizaresource">
<msg timestamp="20191213 15:16:08.687" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait For Active Window" library="AutoItLibrary">
<doc>Wait up to _TimeOut_ seconds for the window with the given _WindowTitle_ and optional
_WindowText_ to appear. Force this to be the active window after it appears.  Optionally do a
full screen capture on failure.</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>${telaCalculo}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20191213 15:16:08.687" level="TRACE">Arguments: [ '' | 'Cálculo de Requisitórios' | 3 ]</msg>
<msg timestamp="20191213 15:16:09.236" level="INFO">AutoItLibrary.WaitForActiveWindow(WindowTitle='', WindowText='Cálculo de Requisitórios', TimeOut=3)</msg>
<msg timestamp="20191213 15:16:09.236" level="INFO">AutoItLibrary.WinWait(WindowTitle='', WindowText='Cálculo de Requisitórios', TimeOut=3)</msg>
<msg timestamp="20191213 15:16:09.236" level="INFO">AutoItLibrary.WinWaitActive(WindowTitle='', WindowText='Cálculo de Requisitórios', TimeOut=3)</msg>
<msg timestamp="20191213 15:16:09.236" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:08.687" endtime="20191213 15:16:09.236"></status>
</kw>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>!u</arg>
</arguments>
<msg timestamp="20191213 15:16:09.236" level="TRACE">Arguments: [ '!u' ]</msg>
<msg timestamp="20191213 15:16:09.258" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:09.236" endtime="20191213 15:16:09.258"></status>
</kw>
<kw name="Wait For Active Window" library="AutoItLibrary">
<doc>Wait up to _TimeOut_ seconds for the window with the given _WindowTitle_ and optional
_WindowText_ to appear. Force this to be the active window after it appears.  Optionally do a
full screen capture on failure.</doc>
<arguments>
<arg>Confirmação</arg>
<arg>${EMPTY}</arg>
<arg>30</arg>
</arguments>
<msg timestamp="20191213 15:16:09.259" level="TRACE">Arguments: [ 'Confirmação' | '' | 30 ]</msg>
<msg timestamp="20191213 15:16:14.706" level="INFO">AutoItLibrary.WaitForActiveWindow(WindowTitle='Confirmação', WindowText='', TimeOut=30)</msg>
<msg timestamp="20191213 15:16:14.706" level="INFO">AutoItLibrary.WinWait(WindowTitle='Confirmação', WindowText='', TimeOut=30)</msg>
<msg timestamp="20191213 15:16:14.706" level="INFO">AutoItLibrary.WinWaitActive(WindowTitle='Confirmação', WindowText='', TimeOut=30)</msg>
<msg timestamp="20191213 15:16:14.706" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:09.259" endtime="20191213 15:16:14.706"></status>
</kw>
<kw name="Press Special Key" library="SikuliLibrary">
<doc>Press special key
 Presses a special keyboard key.</doc>
<arguments>
<arg>ENTER</arg>
</arguments>
<msg timestamp="20191213 15:16:14.706" level="TRACE">Arguments: [ 'ENTER' ]</msg>
<msg timestamp="20191213 15:16:14.759" level="INFO">Params: [ENTER]
[log]  TYPE "#ENTER."</msg>
<msg timestamp="20191213 15:16:14.759" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20191213 15:16:14.706" endtime="20191213 15:16:14.759"></status>
</kw>
<kw name="Wait For Active Window" library="AutoItLibrary">
<doc>Wait up to _TimeOut_ seconds for the window with the given _WindowTitle_ and optional
_WindowText_ to appear. Force this to be the active window after it appears.  Optionally do a
full screen capture on failure.</doc>
<arguments>
<arg>${EMPTY}</arg>
<arg>&amp;OK</arg>
<arg>10</arg>
</arguments>
<msg timestamp="20191213 15:16:14.759" level="TRACE">Arguments: [ '' | '&amp;OK' | 10 ]</msg>
<msg timestamp="20191213 15:16:18.387" level="INFO">AutoItLibrary.WaitForActiveWindow(WindowTitle='', WindowText='&amp;OK', TimeOut=10)</msg>
<msg timestamp="20191213 15:16:18.387" level="INFO">AutoItLibrary.WinWait(WindowTitle='', WindowText='&amp;OK', TimeOut=10)</msg>
<msg timestamp="20191213 15:16:18.387" level="INFO">AutoItLibrary.WinWaitActive(WindowTitle='', WindowText='&amp;OK', TimeOut=10)</msg>
<msg timestamp="20191213 15:16:18.387" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:14.759" endtime="20191213 15:16:18.387"></status>
</kw>
<kw name="Press Special Key" library="SikuliLibrary">
<doc>Press special key
 Presses a special keyboard key.</doc>
<arguments>
<arg>ENTER</arg>
</arguments>
<msg timestamp="20191213 15:16:18.387" level="TRACE">Arguments: [ 'ENTER' ]</msg>
<msg timestamp="20191213 15:16:18.439" level="INFO">Params: [ENTER]
[log]  TYPE "#ENTER."</msg>
<msg timestamp="20191213 15:16:18.439" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20191213 15:16:18.387" endtime="20191213 15:16:18.439"></status>
</kw>
<msg timestamp="20191213 15:16:18.439" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:08.686" endtime="20191213 15:16:18.439"></status>
</kw>
<msg timestamp="20191213 15:16:18.439" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:03.133" endtime="20191213 15:16:18.439"></status>
</kw>
<kw name="Então o saldo será corrigido para a data selecionada">
<msg timestamp="20191213 15:16:18.440" level="TRACE">Arguments: [  ]</msg>
<kw name="Analisar no banco se foi inserido tpCalculo" library="Atualizaresource">
<msg timestamp="20191213 15:16:18.440" level="TRACE">Arguments: [  ]</msg>
<kw name="No Operation" library="BuiltIn">
<doc>Does absolutely nothing.</doc>
<msg timestamp="20191213 15:16:18.441" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20191213 15:16:18.441" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:18.441" endtime="20191213 15:16:18.441"></status>
</kw>
<msg timestamp="20191213 15:16:18.441" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:18.440" endtime="20191213 15:16:18.441"></status>
</kw>
<msg timestamp="20191213 15:16:18.441" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:18.440" endtime="20191213 15:16:18.441"></status>
</kw>
<kw name="Fechar testador" library="Atualizaresource" type="teardown">
<msg timestamp="20191213 15:16:18.442" level="TRACE">Arguments: [  ]</msg>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3</arg>
</arguments>
<msg timestamp="20191213 15:16:18.442" level="TRACE">Arguments: [ '3' ]</msg>
<msg timestamp="20191213 15:16:21.443" level="INFO">Slept 3 seconds</msg>
<msg timestamp="20191213 15:16:21.443" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:18.442" endtime="20191213 15:16:21.443"></status>
</kw>
<kw name="Terminate Process" library="Process">
<doc>Stops the process gracefully or forcefully.</doc>
<arguments>
<arg>${Process cliente}</arg>
<arg>kill=True</arg>
</arguments>
<msg timestamp="20191213 15:16:21.443" level="TRACE">Arguments: [ 1 | kill=True ]</msg>
<msg timestamp="20191213 15:16:21.443" level="INFO">Forcefully killing process.</msg>
<msg timestamp="20191213 15:16:21.545" level="INFO">Process completed.</msg>
<msg timestamp="20191213 15:16:21.545" level="TRACE">Return: &lt;robot.libraries.Process.ExecutionResult object at 0x03E66630&gt;</msg>
<status status="PASS" starttime="20191213 15:16:21.443" endtime="20191213 15:16:21.545"></status>
</kw>
<kw name="Stop Remote Server" library="SikuliLibrary">
<doc>Stops the remote server.</doc>
<msg timestamp="20191213 15:16:21.545" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20191213 15:16:21.550" level="INFO">Robot Framework remote server stopping</msg>
<msg timestamp="20191213 15:16:21.550" level="TRACE">Return: True</msg>
<status status="PASS" starttime="20191213 15:16:21.545" endtime="20191213 15:16:21.550"></status>
</kw>
<msg timestamp="20191213 15:16:21.550" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20191213 15:16:18.441" endtime="20191213 15:16:21.550"></status>
</kw>
<status status="PASS" starttime="20191213 15:16:03.130" endtime="20191213 15:16:21.551" critical="yes"></status>
</test>
<doc>Teste Precatorio</doc>
<status status="PASS" starttime="20191213 15:15:57.837" endtime="20191213 15:16:21.553"></status>
</suite>
<status status="PASS" starttime="20191213 15:15:57.834" endtime="20191213 15:16:21.555"></status>
</suite>
<status status="PASS" starttime="20191213 15:15:57.803" endtime="20191213 15:16:21.557"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="02AtualizarReq">02AtualizarReq</stat>
<stat pass="1" fail="0" id="s1-s1" name="Test">02AtualizarReq.Test</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="TestAtualizarReq">02AtualizarReq.Test.TestAtualizarReq</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
